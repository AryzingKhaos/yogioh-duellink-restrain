// import { map } from 'lodash';

// const excelArray: Record<string, any>[] = [
//   {
//     key: 'any',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '用后场应对破坏剑',
//     永火: '',
//     炎星: '反击真斗需要有炎星怪+炎舞魔陷，如果对方给机会断魔陷or怪，都是可以躲过真斗的',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '尽可能打到1500以下，或者1000以下，或者500以下，都可以限制展开',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '小角龙',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑:
//       '吊顶血克破坏剑=墓地有生存，加拿大盖蛮龙=大部分情况下，加拿大都是盖蛮龙',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '黑魔导',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑:
//       '先手可以优开破坏剑=先手导航，导航拉海空，这样导航可以康追忆，海空可以防墓地追忆=圣杯+羁绊之力+黑魔导可以过蛮龙2800',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '破坏剑',
//     小角龙:
//       '尽快出蛮龙，可以防墓地生存境界=圣枪可以对策加拿大，但是防不了吊顶=破坏剑高手优先出，可以拉对面被效破的恐龙',
//     黑魔导:
//       '尽快做出蛮龙防守，2800防御力对面过不来=破坏剑尽早出来切菜=破坏剑融合可以融对方的黑魔导出帕拉丁',
//     破坏剑: '',
//     永火: '',
//     炎星: '只怕炎星后手OTK=尽快做出蛮龙+龙破坏场，对面非兽战士族可能A不出来',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '永火',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '炎星',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '尽快OTK=瑶光体系内是唯一解完整破坏剑场的手段',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '被改种族之后，不要叫张天，尽可能用熊志解场=康场地和领域都可以',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '核成',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '忍者',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '真红眼',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '黑羽',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '古代机械',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '骑兵',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '不死',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '白龙',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '混沌战士',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '空牙团',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '甲虫',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '水产',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '运动员',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '英雄',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
//   {
//     key: '剑斗',
//     小角龙: '',
//     黑魔导: '',
//     破坏剑: '',
//     永火: '',
//     炎星: '',
//     核成: '',
//     忍者: '',
//     真红眼: '',
//     黑羽: '',
//     古代机械: '',
//     骑兵: '',
//     不死: '',
//     白龙: '',
//     混沌战士: '',
//     空牙团: '',
//     甲虫: '',
//     水产: '',
//     运动员: '',
//     英雄: '',
//     剑斗: '',
//   },
// ];

// export const deckCountermeasureWithAny = excelArray
//   // 将非key的字符串根据“=”split成数组，如“12=34=67”变成['12', '34', '67']
//   .map((item) => {
//     Object.keys(item).forEach((_item) => {
//       if (
//         _item !== 'key' &&
//         typeof item[_item] === 'string' &&
//         item[_item] !== ''
//       ) {
//         item[_item] = item[_item].split('=');
//       }

//       // 过滤空字符串
//       if (item[_item] === '') item[_item] = null;
//     });
//     return item;
//   })
//   // 把数组变成object，用key当做key
//   .reduce((obj, item) => {
//     obj[item.key] = {
//       ...item,
//       key: undefined,
//     };
//     delete obj[item.key].key;
//     return obj;
//   }, {});

// const deckAny = deckCountermeasureWithAny['any'].map((item: Object) => {
//   Object.keys(item).forEach((_item) => {
//     if (Array.isArray(item[_item])) {
//       // todos 这里要干什么，我忘了
//     }
//   });
//   return item;
// });
// const isDefAndIsArray = (arr: any) => {
//   return arr && Array.isArray(arr);
// };

// Object.keys(deckCountermeasureWithAny).map((item) => {
//   if (item === 'any') return;
//   Object.keys(deckCountermeasureWithAny[item]).forEach((_item) => {
//     // A = 当前卡组的对策卡组策略；B = any的对策卡组策略
//     // A和B都有
//     if (
//       isDefAndIsArray(deckCountermeasureWithAny[item][_item]) &&
//       isDefAndIsArray(deckAny[_item])
//     ) {
//       deckCountermeasureWithAny[item][_item] = deckCountermeasureWithAny[item][
//         _item
//       ].concat(deckAny[_item]);
//     }
//     // A没有和B有
//     else if (
//       !isDefAndIsArray(deckCountermeasureWithAny[item][_item]) &&
//       isDefAndIsArray(deckAny[_item])
//     ) {
//       deckCountermeasureWithAny[item][_item] = deckAny[_item].concat([]); // 浅拷贝
//     }
//     // A有和B没有
//     else if (
//       isDefAndIsArray(deckCountermeasureWithAny[item][_item]) &&
//       !isDefAndIsArray(deckAny[_item])
//     ) {
//       // do not anything
//     }
//     // AB都没有
//     else if (
//       !isDefAndIsArray(deckCountermeasureWithAny[item][_item]) &&
//       !isDefAndIsArray(deckAny[_item])
//     ) {
//       // do not anything
//     }
//   });
//   return deckCountermeasureWithAny[item];
// });

// export const deckCountermeasure = deckCountermeasureWithAny;
